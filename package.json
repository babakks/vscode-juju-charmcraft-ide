{
    "name": "vscode-juju-charmcraft-ide",
    "displayName": "Charmcraft IDE",
    "description": "VS Code extension for Juju Charm development",
    "version": "0.0.13",
    "publisher": "babakks",
    "repository": {
        "type": "git",
        "url": "https://github.com/babakks/vscode-juju-charmcraft-ide"
    },
    "engines": {
        "vscode": "^1.73.0"
    },
    "categories": [
        "Other",
        "Programming Languages"
    ],
    "keywords": [
        "juju",
        "charm",
        "charmcraft",
        "ide"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "icon": "image/logo-128x128.png",
    "main": "./out/main.js",
    "extensionDependencies": [],
    "contributes": {
        "commands": [
            {
                "command": "charmcraft-ide.discoverCharms",
                "title": "Discover Charms",
                "category": "Charmcraft IDE",
                "icon": "$(refresh)"
            },
            {
                "command": "charmcraft-ide.revealCharmDirectory",
                "title": "Reveal Charm Directory in Explorer",
                "category": "Charmcraft IDE",
                "icon": "$(folder-opened)"
            },
            {
                "command": "charmcraft-ide.createAndSetupVirtualEnvironment",
                "title": "Create and Setup Virtual Environment (venv)",
                "category": "Charmcraft IDE",
                "icon": "$(vm)"
            },
            {
                "command": "charmcraft-ide.activateCharm",
                "title": "Activate Charm as Default Python Project",
                "category": "Charmcraft IDE",
                "icon": "$(pass-filled)"
            },
            {
                "command": "charmcraft-ide.revealCharmFile",
                "title": "Reveal Charm File in Explorer",
                "category": "Charmcraft IDE",
                "icon": "$(folder-opened)"
            },
            {
                "command": "charmcraft-ide.runToxEnvInTerminal",
                "title": "Run in Terminal (Tox Environment)",
                "category": "Charmcraft IDE",
                "icon": "$(run)"
            },
            {
                "command": "charmcraft-ide.resetStateGlobal",
                "title": "Reset State (Global)",
                "category": "Charmcraft IDE"
            },
            {
                "command": "charmcraft-ide.resetStateWorkspace",
                "title": "Reset State (Workspace)",
                "category": "Charmcraft IDE"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "title": "Charmcraft IDE",
                    "icon": "image/logo-128x128.png",
                    "id": "charmcraft"
                }
            ]
        },
        "views": {
            "charmcraft": [
                {
                    "id": "charmcraft-charms",
                    "name": "Charms"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "when": "view == charmcraft-charms",
                    "group": "navigation",
                    "command": "charmcraft-ide.discoverCharms"
                }
            ],
            "view/item/context": [
                {
                    "when": "view == charmcraft-charms && viewItem == charm",
                    "group": "inline",
                    "command": "charmcraft-ide.revealCharmDirectory"
                },
                {
                    "when": "view == charmcraft-charms && (viewItem == charm || viewItem == noVirtualEnvWarning)",
                    "group": "inline",
                    "command": "charmcraft-ide.createAndSetupVirtualEnvironment"
                },
                {
                    "when": "view == charmcraft-charms && viewItem == charm",
                    "group": "inline",
                    "command": "charmcraft-ide.activateCharm"
                },
                {
                    "when": "view == charmcraft-charms && (viewItem == config || viewItem == actions || viewItem == metadata || viewItem == tox)",
                    "group": "inline",
                    "command": "charmcraft-ide.revealCharmFile"
                },
                {
                    "when": "view == charmcraft-charms && viewItem == toxEnv",
                    "group": "inline",
                    "command": "charmcraft-ide.runToxEnvInTerminal"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Charmcraft IDE",
            "properties": {
                "charmcraft-ide.ignore": {
                    "type": "string",
                    "markdownDescription": "Relative Glob pattern of path of charms to be ignored. For example, `tmp` or `tmp/charms/**`."
                },
                "charmcraft-ide.defaultVirtualEnvDirectory": {
                    "type": "string",
                    "markdownDescription": "Default directory name to setup/detect virtual environments (default is `venv`). This value affects all charms in a workspace, so if you need to change it for some specific charm, use the `override` parameter."
                },
                "charmcraft-ide.test.customDebugLaunchConfig": {
                    "type": "object",
                    "markdownDescription": "Custom fields to include in launch configuration; for example, setting `justMyCode` to `false` to debug external libraries."
                },
                "charmcraft-ide.runLintOnSave": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "markdownDescription": "Enables/disables running linter on save. Default is `true`."
                        },
                        "tox": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "markdownDescription": "Linting-related Tox environment(s)/section(s) to run on save. Default is `[\"testenv:lint\"]`."
                        },
                        "commands": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "markdownDescription": "Linting-related commands to run on save. Default is empty."
                        },
                        "exclude": {
                            "type": "array",
                            "markdownDescription": "Array of linters to exclude their diagnostics; for example, `[\"flake8\"]`.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "include": {
                            "type": "array",
                            "markdownDescription": "Array of linters to include their diagnostics and exclude other linters'; for example, `[\"flake8\"]`.",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "charmcraft-ide.override": {
                    "type": "object",
                    "description": "Allows overriding default configurations for specific charms. The value should be a map with relative charm directory paths as keys.",
                    "patternProperties": {
                        ".*": {
                            "type": "object",
                            "properties": {
                                "virtualEnvDirectory": {
                                    "type": "string",
                                    "default": "venv",
                                    "markdownDescription": "Directory name to setup/detect virtual environment for the associated charm."
                                },
                                "runLintOnSave": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "markdownDescription": "Enables/disables running linter on save. Default is `true`."
                                        },
                                        "tox": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "markdownDescription": "Linting-related Tox environment(s)/section(s) to run on save. Default is `[\"testenv:lint\"]`."
                                        },
                                        "commands": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "markdownDescription": "Linting-related commands to run on save. Default is empty."
                                        },
                                        "exclude": {
                                            "type": "array",
                                            "markdownDescription": "Array of linters to exclude their diagnostics; for example, `[\"flake8\"]`.",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "include": {
                                            "type": "array",
                                            "markdownDescription": "Array of linters to include their diagnostics and exclude other linters'; for example, `[\"flake8\"]`.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "clean": "rm -rf out",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run clean && npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test-vscode": "node ./out/test/vscode/runTest.js",
        "test": "mocha 'out/**/*.test.js' --ignore 'out/test/vscode/**/*' --ui tdd"
    },
    "devDependencies": {
        "@types/chai": "^4.3.9",
        "@types/glob": "^7.2.0",
        "@types/ini": "^1.3.32",
        "@types/js-yaml": "^4.0.8",
        "@types/mocha": "^9.1.1",
        "@types/node": "^14.18.63",
        "@types/vscode": "^1.73.0",
        "@typescript-eslint/eslint-plugin": "^5.62.0",
        "@typescript-eslint/parser": "^5.62.0",
        "@vscode/test-electron": "^2.3.6",
        "chai": "^4.3.10",
        "eslint": "^8.52.0",
        "glob": "^7.2.3",
        "mocha": "^9.2.2",
        "typescript": "^4.9.5"
    },
    "dependencies": {
        "@vscode/extension-telemetry": "^0.8.5",
        "handlebars": "^4.7.8",
        "ini": "^4.1.1",
        "yaml": "^2.3.3"
    }
}